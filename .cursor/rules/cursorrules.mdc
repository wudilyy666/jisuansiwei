---
description: 
globs: 
alwaysApply: true
---
注意问题.pdf 1/2 注意问题 1.交互错误,答案错误,运行时错误: 。注意输入的格式,第一次输入两个方块,之后输入一个方块,最后输入x或E(程序里面可以不用自行检查失败,只需要判断x或E就行) 注意1:第一行是两个连续的字符,之后是每行一个字符,最后输入x或E,没有正确处理输入容易导致交互错误、答案错误 注意2:输入x,要先处理之前的候选方块,再退出 注意3:输入E,要立即退出 注意输出的格式,输出角度和位置,换行后输出得分 注意1:第一行是“角度位置”,第二行是“得分”,没有正确处理输出容易导致答案错误、运行时错误 注意2:printf输出之后要加fflush(stdout): 注意3:收到X后,需要处理完当前方块并输出结果后才能退出程序,X在倾选区,当前方块还得继续处理 注意4:收到E后,已经触及死亡线,立即退出 如果输出的得分不对、输出的角度不对(0-3)、输出的位置触碰边界(>9或<0),会产生错误(注意:没有正确判断触碰边界容易导致答案错误、运行时错误) 如果用了指针,需要小心检查指针是不是越界。建议将指针转换为二维数组,严格限制二维数组的x/y取值不超过放置空间边界,特别是在计算碰撞检查的时候,有没有出现地图二维数组越界检查重叠区(注意:越界访问容易导致运行时错误) 2.运行超时: 如果在本机运行就很慢,放到pta上可能会超时。目前已经测过能得400万分的同学差不多5秒左右,系统设置的是10秒左右超时。 目前看如果用了PierreDellacherie算法,其几个指标的全部遍历计算,并不会导致程序超时。如果计算超时了,需要检查一下自己是不是有太多的无效遍历。 建议检查点: 指标的计算是不是用的两层循环,x轴追历+y轴遍历,有没有嵌套太多其他无效循环 候选位置的计算只需要x轴遍历+方块4个旋转方向的遍历,不需要嵌套其他无效循环 注意:遍历的时候建议用x轴+y轴两层遍历循环,不建议用while选代 3.运行时,部分检查点通过了,部分检查点失败了: 部分检查点失败,很可能是没有注意进行边界碰撞检查 部分检查点失败,也可能是消除行数计算得分有问题 0只要放置合规,消除行数计算正确,顶多是不得分,不会检查点失败 4.检查点都通过了,但是不得分(或者自己认为得分,pta不给分): 。检查放置策略,有没有正确放置并计算消除行 不要自己认为得分就是得分了,要把网格地图打印出来,看看自己的方块是不是放对了位置,是不是正确消除了行数 注意:消除1行、2-4行,都要检查,不是看到消除一行就认为可以了,要检查消除行数与得分对应关系5.如何排查错误 第一步:只写输入输出,把放置策略注销,所有的方块都用默认值放置,按说应该是能通过所有检测点,只不过得分是0,但能够保证输入输出是对的(注意:收到的x是下一个候选字符,需要处理完成当前方块并输出结果后才能结束程序,不能收到X就立即退出;收到E可以立即退出) 第二步:加入方块旋转遍历、放置遍历、计算碰撞检测,但不计算放置策略指标,按说也应该能通过所有检测点,得分可能也是0,但能够保证不会有边界越界的问题,保证碰撞检测、放置检测正确(注意:检查方块在x轴0至9,y轴0至15的边界位置能不能检测出碰撞等) 第三步:加入消除行得分检测,加入一个放置指标检测,按说能通过所有检测点,得分会很低,但不会只是0,但能保证行消除和一个指标检测不会遍历越界(注意:检查是不是正确消除行,消除多行是不是能正确下移,消除后是不是能正确计算得分,特别是消除多行的得分是不是正确)(建议在这一步把当前的网格图打印出来,看看自己的放置是不是正确,消除是不是正确) 第四步:加入全部指标检测,判断这些指标能不能获得高分 第五步:加入候选方块的得分检测,看是不是能比仅处理当前方块得分更高一些 第六步:优化调整指标检测权值,看能不能得分更高一些 如果面临自认为输入输出都是对的,但就是运行时错误: 确保第一步到第三步没有运行时错误,任何一步有错误都要退回去检查 逐步增加代码,排查可能的问题在哪里 6.调试建议 出现问题,按照上面如何排查错误建议,一步一步先排除输入输出问题,碰撞检测问题,追历越界问题,消除得分问题等 排查错误的时候,要学会逐步排查,一个函数功能一个函数功能的验证是不是有效,这实际就是单元测试的过程;几个函数功能验证通过后,再放在一起测试,这实际就是集成测试的过程;最后全程序联合起来,调优放置策略的优化函数,就是系统测试。 写代码要模块化,不要所有代码堆在一起！一定把独立功能拆分成函数,模块化比较容易测试,堆在一起没法测试！ 。函数里面能用for循环不用while循环,for循环很清晰知道边界在哪里,while不容易排查 0建议用二维数组结构做网格地图和方块结构处理,不建议用一维数组或指针偏移,排查起来有难度 写代码不要只扔给A去检查,或者只用AI生成的拼在一起.